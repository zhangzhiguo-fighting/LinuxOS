!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BLACK	common/color.h	12;"	d
BLUE	common/color.h	20;"	d
Ctrl	common/datatype.h	/^struct Ctrl {$/;"	s
DBG	common/common.h	18;"	d
DBG	common/common.h	20;"	d
Football	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
GREEN	common/color.h	16;"	d
HEAD_H	common/head.h	9;"	d
Help	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
L_BLACK	common/color.h	13;"	d
L_BLUE	common/color.h	21;"	d
L_GREEN	common/color.h	17;"	d
L_PINK	common/color.h	22;"	d
L_RED	common/color.h	15;"	d
L_YELLOW	common/color.h	19;"	d
LogRequest	common/datatype.h	/^struct LogRequest{$/;"	s
LogResponse	common/datatype.h	/^struct LogResponse{$/;"	s
MAX	game.h	5;"	d
MAX_CLIENT	common/chatroom.h	44;"	d
Map	common/datatype.h	/^struct Map {$/;"	s
Message	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
Msg	common/chatroom.h	/^struct Msg {$/;"	s
NONE	common/color.h	11;"	d
PINK	common/color.h	23;"	d
Point	common/datatype.h	/^struct Point{$/;"	s
RED	common/color.h	14;"	d
RecvMsg	common/chatroom.h	/^struct RecvMsg {$/;"	s
Score	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
TransMsg	common/datatype.h	/^struct TransMsg{$/;"	s
User	common/datatype.h	/^struct User{$/;"	s
Write	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
YELLOW	common/color.h	18;"	d
_CHATROOM_H	common/chatroom.h	9;"	d
_COLOR_H	common/color.h	9;"	d
_COMMON_H	common/common.h	9;"	d
_GAME_H	game.h	2;"	d
_GLOBAL_H	common/global.h	2;"	d
_TCP_CLIENT_H	common/tcp_client.h	9;"	d
_TCP_SERVER_H	common/tcp_server.h	9;"	d
_TCP_SERVER_H	common/udp_client.h	2;"	d
_TCP_SERVER_H	common/udp_server.h	9;"	d
_UDP_EPOLL_H	common/udp_epoll.h	2;"	d
add_event	common/udp_epoll.c	/^void add_event(int epollfd, int fd, int events) {$/;"	f
addr	common/datatype.h	/^    struct sockaddr_in addr;$/;"	m	struct:User	typeref:struct:User::sockaddr_in
bteam	server/server.c	/^struct User *bteam;$/;"	v	typeref:struct:User
carry	common/datatype.h	/^    int carry;$/;"	m	struct:Ctrl
chat_recv	common/chatroom.h	/^struct RecvMsg chat_recv(int fd) {$/;"	f
chat_send	common/chatroom.h	/^int chat_send(struct Msg msg, int fd) {$/;"	f
conf	client/client.c	/^char *conf = ".\/football.conf";$/;"	v
conf	server/server.c	/^char *conf = ".\/server.conf"; \/\/弄成全局的$/;"	v
conf_ans	common/global.c	/^char conf_ans[50];$/;"	v
court	game.h	/^struct Map court;$/;"	v	typeref:struct:Map
create_newwin	game.h	/^WINDOW *create_newwin(int width, int heigth, int startx, int starty) {$/;"	f
ctrl	common/datatype.h	/^    struct Ctrl ctrl;$/;"	m	struct:TransMsg	typeref:struct:TransMsg::Ctrl
data_port	server/server.c	/^int data_port;$/;"	v
del_event	common/udp_epoll.c	/^void del_event(int epollfd, int fd, int events) {$/;"	f
destroy_win	game.h	/^void destroy_win(WINDOW * win) {$/;"	f
dirx	common/datatype.h	/^    int dirx;$/;"	m	struct:TransMsg
diry	common/datatype.h	/^    int diry;$/;"	m	struct:TransMsg
draw	game.h	/^void *draw(void *arg) {$/;"	f
epoll_fd	server/server.c	/^int epoll_fd;$/;"	v
flag	common/chatroom.h	/^    int flag;$/;"	m	struct:Msg
flag	common/datatype.h	/^    int flag; \/\/未效应次数,判断是否在线$/;"	m	struct:User
from	common/chatroom.h	/^    char from[20];$/;"	m	struct:Msg
gate_heigth	common/datatype.h	/^    int gate_heigth;$/;"	m	struct:Map
gate_width	common/datatype.h	/^    int gate_width;$/;"	m	struct:Map
get_value	common/common.c	/^char *get_value(char *path, char *key) {$/;"	f
gotoxy	game.h	/^void gotoxy(int x, int y) {$/;"	f
gotoxy_putc	game.h	/^void gotoxy_putc(int x, int y, int c) {$/;"	f
gotoxy_puts	game.h	/^void gotoxy_puts(int x, int y, char* s) {$/;"	f
heigth	common/datatype.h	/^    int heigth; \/\/Row$/;"	m	struct:Map
initfootball	game.h	/^void initfootball() {$/;"	f
kick	common/datatype.h	/^    int kick;$/;"	m	struct:Ctrl
loc	common/datatype.h	/^    struct Point loc;$/;"	m	struct:User	typeref:struct:User::Point
main	client/client.c	/^int main(int argc, char **argv) {$/;"	f
main	common/test.c	/^int main() {$/;"	f
main	server/server.c	/^int main(int argc, char **argv) {$/;"	f
main	udp/client.c	/^int main(int argc, char **argv) {$/;"	f
main	udp/server.c	/^int main(int argc, char **argv) {$/;"	f
make_block	common/common.c	/^void make_block(int fd) {$/;"	f
make_block_ioctl	common/common.c	/^void make_block_ioctl(int fd) {$/;"	f
make_nonblock	common/common.c	/^void make_nonblock(int fd) {$/;"	f
make_nonblock_ioctl	common/common.c	/^void make_nonblock_ioctl(int fd){$/;"	f
message	common/chatroom.h	/^    char message[512];$/;"	m	struct:Msg
msg	common/chatroom.h	/^    struct Msg msg;$/;"	m	struct:RecvMsg	typeref:struct:RecvMsg::Msg
msg	common/datatype.h	/^    char msg[512];$/;"	m	struct:LogRequest
msg	common/datatype.h	/^    char msg[512];$/;"	m	struct:LogResponse
name	common/datatype.h	/^    char name[20]; \/\/Nmae of user$/;"	m	struct:LogRequest
name	common/datatype.h	/^    char name[20];$/;"	m	struct:User
port	server/server.c	/^int port = 0;$/;"	v
retval	common/chatroom.h	/^    int retval;$/;"	m	struct:RecvMsg
rteam	server/server.c	/^struct User *rteam;$/;"	v	typeref:struct:User
server_ip	client/client.c	/^char server_ip[20] = {0};$/;"	v
server_port	client/client.c	/^int server_port = 0;$/;"	v
socket_connect	common/tcp_client.c	/^int socket_connect(char *host, int port) {$/;"	f
socket_connect_timeout	common/tcp_client.c	/^int socket_connect_timeout(char *host, int port, long timeout) {$/;"	f
socket_create	common/tcp_server.c	/^int socket_create(int port) {$/;"	f
socket_create_udp	common/udp_server.c	/^int socket_create_udp(int port) {$/;"	f
socket_udp	common/udp_client.c	/^int socket_udp() {$/;"	f
start	common/datatype.h	/^    struct Point start; \/\/已知起点，长，宽，便可以绘制一个矩形$/;"	m	struct:Map	typeref:struct:Map::Point
team	common/datatype.h	/^    int team; \/\/0 READ 1 BLUE$/;"	m	struct:LogRequest
team	common/datatype.h	/^    int team;$/;"	m	struct:User
type	common/datatype.h	/^    int type; \/\/0 success 1failed$/;"	m	struct:LogResponse
udp_accept	common/udp_epoll.c	/^int udp_accept(int epollfd, int fd) {$/;"	f
udp_connect	common/udp_epoll.c	/^int udp_connect(int epollfd, struct sockaddr_in * serveraddr) {$/;"	f
w_gotoxy_putc	game.h	/^void w_gotoxy_putc(WINDOW *win, int x, int y, int c){$/;"	f
w_gotoxy_puts	game.h	/^void w_gotoxy_puts(WINDOW *win, int x, int y, char *s) {$/;"	f
width	common/datatype.h	/^    int width; \/\/Column$/;"	m	struct:Map
x	common/datatype.h	/^    int x;$/;"	m	struct:Point
y	common/datatype.h	/^    int y;$/;"	m	struct:Point
